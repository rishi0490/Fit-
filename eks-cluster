apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  # Name of your EKS cluster
  name: dev-cluster
  # Region (change as needed)
  region: ap-south-1
  # Use the latest supported Kubernetes version (1.33 as of Aug‑2025)
  version: "1.33"

# Use an existing VPC and specify the subnets explicitly
# At least two private and two public subnets in different AZs are recommended.
vpc:
  id: "vpc-006d8659"     # <-- replace with your VPC ID
  subnets:
    private:
      ap-south-1a:
        id: "subnet-072626aa"     # <-- replace with private subnet ID
      ap-south-1b:
        id: "subnet-09dedb958"
    public:
      ap-south-1a:
        id: "subnet-08dfc95d2c"      # <-- replace with public subnet ID
      ap-south-1b:
        id: "subnet-032a544c6"
  # Optionally make both API endpoints reachable.  You can set publicAccess:false for private‑only API access.
  clusterEndpoints:
    publicAccess:  true
    privateAccess: true

# Define a single managed node group that runs exclusively on Spot instances
managedNodeGroups:
  - name: dev-spot-ng
    # Only use Spot capacity for this node group
    spot: true
    # List multiple instance types to improve Spot resilience; choose sizes that suit your workload.
    instanceTypes: ["c5a.xlarge", "c6a.xlarge", "m5a.xlarge", "m6a.xlarge"]
    volumeSize: 60
    # Scaling parameters
    minSize: 1
    desiredCapacity: 1
    maxSize: 5
    privateNetworking: true
    # Node IAM role settings
    iam:
      # Attach built‑in add‑on policies for EBS CSI and AWS Load Balancer controller
      # These automatically include default worker‑node policies (AmazonEKSWorkerNodePolicy,
      # AmazonEKS_CNI_Policy, and AmazonEC2ContainerRegistryReadOnly) plus the
      # EBS and ALB controller permissions.
      withAddonPolicies:
        ebs: true                      # required for dynamic Amazon EBS volumes
        awsLoadBalancerController: true # required by AWS Load Balancer Controller
        autoScaler: true               # required by Cluster Autoscaler
